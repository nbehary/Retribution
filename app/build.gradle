/*
 *
 *   Copyright (c) 2015. Nathan A. Behary
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *           http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *
 */

import java.util.regex.Pattern





apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'


repositories {
    maven { url 'http://repo1.maven.org/maven2' }
    mavenCentral()
}

final SUPPORT_LIB_VERSION = '1.0.0'
final BUTTERKNIFE_VERSION = '9.0.0-rc1'


dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')

    implementation "com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-2"
    implementation "androidx.legacy:legacy-support-v4:${SUPPORT_LIB_VERSION}"
    implementation "androidx.appcompat:appcompat:${SUPPORT_LIB_VERSION}"
    implementation "androidx.palette:palette:${SUPPORT_LIB_VERSION}"
    implementation "androidx.annotation:annotation:${SUPPORT_LIB_VERSION}"
    implementation "androidx.recyclerview:recyclerview:${SUPPORT_LIB_VERSION}"
    implementation "androidx.cardview:cardview:${SUPPORT_LIB_VERSION}"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def room_version = "2.1.0-alpha02"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // use kapt for Kotlin

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

}



android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28

    }
    lintOptions {
        abortOnError false
        ignoreWarnings true
    }

    if(project.hasProperty("MyProject.properties")
            && new File(project.property("MyProject.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("MyProject.properties"))))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }

//    task('increaseVersionCode') << {
//        def manifestFile = file("src/main/AndroidManifest.xml")
//        def pattern = Pattern.implementation("versionCode=\"(\\d+)\"")
//        def manifestText = manifestFile.getText()
//        def matcher = pattern.matcher(manifestText)
//        matcher.find()
//        def versionCode = Integer.parseInt(matcher.group(1))
//        def manifestContent = matcher.replaceAll("versionCode=\"" + ++versionCode + "\"")
//        manifestFile.write(manifestContent)
//    }
//
//    task('tagDebugBuilds') << {
//        def manifestFile = file("src/main/AndroidManifest.xml")
//        def pattern = Pattern.implementation("versionName=\".*\"")
//        def manifestText = manifestFile.getText()
//        def matcher = pattern.matcher(manifestText)
//        matcher.find()
//        def manifestContent = matcher.replaceAll("versionName=\"" + "-debug" + "\"")
//        manifestFile.write(manifestContent)
//
//    }

//    tasks.whenTaskAdded { task ->
//        if ((task.name == 'generateReleaseBuildConfig')) {
//            task.dependsOn 'increaseVersionCode'
//        }


//    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

	debug {
	    signingConfig signingConfigs.release
        //packageNameSuffix ".debug"
	}
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}







